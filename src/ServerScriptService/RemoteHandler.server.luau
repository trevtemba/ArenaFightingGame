local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Services = require(ReplicatedStorage.Modules.Shared.Services)
local PlayerHandler = require(Services.Server.PlayerHandler)

local ServerEvents = Services.ServerEvents

ServerEvents:WaitForChild("OnAttack").OnServerEvent:Connect(function(plr, spaceHeld)
	PlayerHandler.OnAttack(plr, spaceHeld)
end)
ServerEvents:WaitForChild("OnCast").OnServerEvent:Connect(function(plr, abilitySlot)
	PlayerHandler.OnCast(plr, abilitySlot)
end)
ServerEvents:WaitForChild("OnSoulCast").OnServerEvent:Connect(function(plr, argumentData)
	PlayerHandler.OnSoulCast(plr, argumentData)
end)
ServerEvents:WaitForChild("OnSoulVisibleToggle").OnServerEvent:Connect(function(plr, visible)
	PlayerHandler.OnSoulVisibleToggle(plr, visible)
end)
ServerEvents:WaitForChild("OnBlock").OnServerEvent:Connect(function(plr, activate)
	PlayerHandler.OnBlock(plr, activate)
end)
ServerEvents:WaitForChild("OnSprint").OnServerEvent:Connect(function(plr, sprintState)
	PlayerHandler.OnSprint(plr, sprintState)
end)
ServerEvents:WaitForChild("OnDash").OnServerEvent:Connect(function(plr, direction)
	PlayerHandler.OnDash(plr, direction)
end)
ServerEvents:WaitForChild("OnDev").OnServerEvent:Connect(function(plr, devCode)
	PlayerHandler.OnDev(plr, devCode)
end)
-- ServerEvents.Cast.OnServerEvent:Connect(PlayerHandler.OnCast)
-- ServerEvents.Dash.OnServerEvent:Connect(PlayerHandler.OnDash)
-- ServerEvents.Pickup.OnServerEvent:Connect(PlayerHandler.OnPickup)
